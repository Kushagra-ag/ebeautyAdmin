{"version":3,"sources":["serviceWorker.js","components/GlobalStyles.js","mixins/chartjs.js","theme/index.js","theme/shadows.js","theme/typography.js","layouts/DashboardLayout/NavBar/NavItem.js","layouts/DashboardLayout/NavBar/index.js","components/Logo.js","layouts/DashboardLayout/TopBar.js","layouts/DashboardLayout/index.js","layouts/MainLayout/TopBar.js","layouts/MainLayout/index.js","components/Page.js","views/account/AccountView/Profile.js","views/account/AccountView/ProfileDetails.js","views/account/AccountView/index.js","utils/getInitials.js","views/customer/CustomerListView/Results.js","views/customer/CustomerListView/Toolbar.js","views/customer/CustomerListView/data.js","methods/userMethods.js","views/customer/CustomerListView/index.js","views/reports/DashboardView/Budget.js","views/reports/DashboardView/LatestOrders.js","views/reports/DashboardView/LatestProducts.js","views/reports/DashboardView/Sales.js","views/reports/DashboardView/TasksProgress.js","views/reports/DashboardView/TotalCustomers.js","views/reports/DashboardView/TotalProfit.js","views/reports/DashboardView/TrafficByDevice.js","views/reports/DashboardView/ApprovalTable.js","views/reports/DashboardView/index.js","methods/authMethods.js","assets/images/bg.jpg","views/auth/LoginView.js","views/errors/NotFoundView.js","views/product/ProductListView/Toolbar.js","views/product/ProductListView/ProductCard.js","views/product/ProductListView/data.js","views/product/ProductListView/index.js","views/auth/RegisterView.js","views/settings/SettingsView/Notifications.js","views/settings/SettingsView/Password.js","views/settings/SettingsView/index.js","routes.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","useStyles","makeStyles","createStyles","boxSizing","margin","padding","html","height","width","body","backgroundColor","a","textDecoration","GlobalStyles","Chart","helpers","extend","elements","Rectangle","prototype","draw","left","right","top","bottom","signX","signY","borderSkipped","radius","ctx","this","_chart","vm","_view","borderWidth","cornerRadius","config","options","horizontal","base","x","y","barSize","Math","min","abs","halfStroke","borderLeft","borderRight","borderTop","borderBottom","beginPath","fillStyle","strokeStyle","borderColor","lineWidth","corners","startCorner","indexOf","cornerAt","index","corner","moveTo","i","nextCornerId","floor","xTl","xTr","yTl","yTr","xBl","xBr","yBl","yBr","lineTo","quadraticCurveTo","fill","stroke","theme","createMuiTheme","palette","background","dark","default","colors","common","white","paper","primary","main","indigo","secondary","text","blueGrey","shadows","typography","h1","fontWeight","fontSize","letterSpacing","h2","h3","h4","h5","h6","overline","item","display","paddingTop","paddingBottom","button","color","fontWeightMedium","justifyContent","textTransform","icon","marginRight","spacing","title","active","NavItem","className","href","Icon","rest","classes","ListItem","clsx","disableGutters","Button","activeClassName","component","RouterLink","to","size","user","items","UsersIcon","LockIcon","mobileDrawer","desktopDrawer","avatar","cursor","NavBar","onMobileClose","openMobile","useLocation","useEffect","pathname","content","Box","flexDirection","alignItems","p","Avatar","src","Typography","name","variant","Divider","List","map","flexGrow","Hidden","lgUp","Drawer","anchor","onClose","open","mdDown","defaultProps","Logo","props","alt","root","TopBar","onMobileNavOpen","useState","notifications","AppBar","elevation","IconButton","Badge","badgeContent","length","onClick","overflow","wrapper","flex","breakpoints","up","paddingLeft","contentContainer","DashboardLayout","isMobileNavOpen","setMobileNavOpen","toolbar","MainLayout","Page","forwardRef","ref","children","Helmet","Profile","Card","CardContent","gutterBottom","dateText","moment","format","CardActions","fullWidth","states","value","label","ProfileDetails","firstName","lastName","email","phone","state","country","values","setValues","handleChange","event","target","autoComplete","noValidate","CardHeader","subheader","Grid","container","md","xs","TextField","helperText","onChange","required","type","select","SelectProps","native","option","minHeight","Account","Container","maxWidth","lg","replace","split","slice","v","toUpperCase","join","Results","customers","page","setPage","selectedCustomerIds","setSelectedCustomerIds","limit","setLimit","approved","style","borderRadius","notApproved","pending","minWidth","Table","TableHead","TableRow","TableCell","Checkbox","checked","indeterminate","newSelectedCustomerIds","customer","id","TableBody","hover","selected","selectedIndex","concat","handleSelectOne","avatarUrl","getInitials","isSeller","sellerIsApproved","created","TablePagination","count","onChangePage","newPage","onChangeRowsPerPage","rowsPerPage","rowsPerPageOptions","selectEmpty","marginTop","formControl","Toolbar","searchUsers","setType","query","setQuery","mt","sm","InputProps","startAdornment","InputAdornment","position","SvgIcon","placeholder","FormControl","InputLabel","Select","labelId","MenuItem","uuid","address","city","street","createdAt","API","process","getUsers","data","success","failure","axios","post","headers","then","res","console","log","CustomerListView","updateCustomers","setError","users","red","differenceIcon","differenceValue","amount","status","actions","LatestOrders","orders","sortDirection","Tooltip","enterDelay","TableSortLabel","direction","order","Chip","endIcon","imageUrl","updatedAt","subtract","image","LatestProducts","products","subtitle","product","divider","ListItemAvatar","ListItemText","fromNow","edge","Sales","useTheme","datasets","grey","labels","animation","layout","legend","maintainAspectRatio","responsive","scales","xAxes","barThickness","maxBarThickness","barPercentage","categoryPercentage","ticks","fontColor","gridLines","drawBorder","yAxes","beginAtZero","borderDash","borderDashOffset","zeroLineBorderDash","zeroLineBorderDashOffset","zeroLineColor","tooltips","bodyFontColor","enabled","footerFontColor","intersect","mode","titleFontColor","action","orange","green","TrafficByDevice","hoverBorderColor","cutoutPercentage","devices","LaptopMacIcon","TabletIcon","PhoneIcon","textAlign","Dashboard","ApprovalTable","xl","notificationId","catch","e","next","localStorage","setItem","JSON","stringify","Copyright","align","Link","Date","getFullYear","backgroundImage","Background","backgroundRepeat","backgroundSize","backgroundPosition","form","submit","SignInSide","navigate","useNavigate","password","cred","setCred","error","handleCred","trim","CssBaseline","Paper","square","metod","onSubmit","preventDefault","login","authenticateAdmin","autoFocus","Alert","severity","NotFoundView","importButton","exportButton","statsItem","statsIcon","ProductCard","mb","media","description","justify","totalDownloads","productCard","ProductList","Pagination","RegisterView","initialValues","policy","validationSchema","Yup","shape","max","oneOf","errors","handleBlur","handleSubmit","isSubmitting","touched","onBlur","ml","underline","FormHelperText","my","disabled","Notifications","wrap","FormControlLabel","control","defaultChecked","Password","confirm","SettingsView","routes","path","element","AccountView","DashboardView","ProductListView","App","routing","useRoutes","ThemeProvider","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.72404dc2.chunk.js","sourcesContent":["/* eslint-disable */\r\n// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.1/8 is considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n            'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { createStyles, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(() => createStyles({\r\n  '@global': {\r\n    '*': {\r\n      boxSizing: 'border-box',\r\n      margin: 0,\r\n      padding: 0,\r\n    },\r\n    html: {\r\n      '-webkit-font-smoothing': 'antialiased',\r\n      '-moz-osx-font-smoothing': 'grayscale',\r\n      height: '100%',\r\n      width: '100%'\r\n    },\r\n    body: {\r\n      backgroundColor: '#f4f6f8',\r\n      height: '100%',\r\n      width: '100%'\r\n    },\r\n    a: {\r\n      textDecoration: 'none'\r\n    },\r\n    '#root': {\r\n      height: '100%',\r\n      width: '100%'\r\n    }\r\n  }\r\n}));\r\n\r\nconst GlobalStyles = () => {\r\n  useStyles();\r\n\r\n  return null;\r\n};\r\n\r\nexport default GlobalStyles;\r\n","import { Chart } from 'react-chartjs-2';\r\n\r\n// ChartJS extension rounded bar chart\r\n// https://codepen.io/jedtrow/full/ygRYgo\r\nfunction draw() {\r\n  const { ctx } = this._chart;\r\n  const vm = this._view;\r\n  let { borderWidth } = vm;\r\n\r\n  let left;\r\n  let right;\r\n  let top;\r\n  let bottom;\r\n  let signX;\r\n  let signY;\r\n  let borderSkipped;\r\n  let radius;\r\n\r\n  // If radius is less than 0 or is large enough to cause drawing errors a max\r\n  //      radius is imposed. If cornerRadius is not defined set it to 0.\r\n  let { cornerRadius } = this._chart.config.options;\r\n  if (cornerRadius < 0) {\r\n    cornerRadius = 0;\r\n  }\r\n\r\n  if (typeof cornerRadius === 'undefined') {\r\n    cornerRadius = 0;\r\n  }\r\n\r\n  if (!vm.horizontal) {\r\n    // bar\r\n    left = vm.x - vm.width / 2;\r\n    right = vm.x + vm.width / 2;\r\n    top = vm.y;\r\n    bottom = vm.base;\r\n    signX = 1;\r\n    signY = bottom > top ? 1 : -1;\r\n    borderSkipped = vm.borderSkipped || 'bottom';\r\n  } else {\r\n    // horizontal bar\r\n    left = vm.base;\r\n    right = vm.x;\r\n    top = vm.y - vm.height / 2;\r\n    bottom = vm.y + vm.height / 2;\r\n    signX = right > left ? 1 : -1;\r\n    signY = 1;\r\n    borderSkipped = vm.borderSkipped || 'left';\r\n  }\r\n\r\n  // Canvas doesn't allow us to stroke inside the width so we can\r\n  // adjust the sizes to fit if we're setting a stroke on the line\r\n  if (borderWidth) {\r\n    // borderWidth shold be less than bar width and bar height.\r\n    const barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\r\n    borderWidth = borderWidth > barSize ? barSize : borderWidth;\r\n    const halfStroke = borderWidth / 2;\r\n    // Adjust borderWidth when bar top position is near vm.base(zero).\r\n    const borderLeft = left + (borderSkipped !== 'left' ? halfStroke * signX : 0);\r\n    const borderRight = right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);\r\n    const borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);\r\n    const borderBottom = bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0);\r\n    // not become a vertical line?\r\n    if (borderLeft !== borderRight) {\r\n      top = borderTop;\r\n      bottom = borderBottom;\r\n    }\r\n    // not become a horizontal line?\r\n    if (borderTop !== borderBottom) {\r\n      left = borderLeft;\r\n      right = borderRight;\r\n    }\r\n  }\r\n\r\n  ctx.beginPath();\r\n  ctx.fillStyle = vm.backgroundColor;\r\n  ctx.strokeStyle = vm.borderColor;\r\n  ctx.lineWidth = borderWidth;\r\n\r\n  // Corner points, from bottom-left to bottom-right clockwise\r\n  // | 1 2 |\r\n  // | 0 3 |\r\n  const corners = [[left, bottom], [left, top], [right, top], [right, bottom]];\r\n\r\n  // Find first (starting) corner with fallback to 'bottom'\r\n  const borders = ['bottom', 'left', 'top', 'right'];\r\n  let startCorner = borders.indexOf(borderSkipped, 0);\r\n  if (startCorner === -1) {\r\n    startCorner = 0;\r\n  }\r\n\r\n  function cornerAt(index) {\r\n    return corners[(startCorner + index) % 4];\r\n  }\r\n\r\n  // Draw rectangle from 'startCorner'\r\n  let corner = cornerAt(0);\r\n  ctx.moveTo(corner[0], corner[1]);\r\n\r\n  for (let i = 1; i < 4; i += 1) {\r\n    corner = cornerAt(i);\r\n    let nextCornerId = i + 1;\r\n    if (nextCornerId === 4) {\r\n      nextCornerId = 0;\r\n    }\r\n\r\n    const width = corners[2][0] - corners[1][0];\r\n    const height = corners[0][1] - corners[1][1];\r\n    const x = corners[1][0];\r\n    const y = corners[1][1];\r\n\r\n    radius = cornerRadius;\r\n    // Fix radius being too large\r\n    if (radius > Math.abs(height) / 2) {\r\n      radius = Math.floor(Math.abs(height) / 2);\r\n    }\r\n    if (radius > Math.abs(width) / 2) {\r\n      radius = Math.floor(Math.abs(width) / 2);\r\n    }\r\n\r\n    if (height < 0) {\r\n      // Negative values in a standard bar chart\r\n      const xTl = x;\r\n      const xTr = x + width;\r\n      const yTl = y + height;\r\n      const yTr = y + height;\r\n\r\n      const xBl = x;\r\n      const xBr = x + width;\r\n      const yBl = y;\r\n      const yBr = y;\r\n\r\n      // Draw\r\n      ctx.moveTo(xBl + radius, yBl);\r\n      ctx.lineTo(xBr - radius, yBr);\r\n      ctx.quadraticCurveTo(xBr, yBr, xBr, yBr - radius);\r\n      ctx.lineTo(xTr, yTr + radius);\r\n      ctx.quadraticCurveTo(xTr, yTr, xTr - radius, yTr);\r\n      ctx.lineTo(xTl + radius, yTl);\r\n      ctx.quadraticCurveTo(xTl, yTl, xTl, yTl + radius);\r\n      ctx.lineTo(xBl, yBl - radius);\r\n      ctx.quadraticCurveTo(xBl, yBl, xBl + radius, yBl);\r\n    } else if (width < 0) {\r\n      // Negative values in a horizontal bar chart\r\n      const xTl = x + width;\r\n      const xTr = x;\r\n      const yTl = y;\r\n      const yTr = y;\r\n\r\n      const xBl = x + width;\r\n      const xBr = x;\r\n      const yBl = y + height;\r\n      const yBr = y + height;\r\n\r\n      // Draw\r\n      ctx.moveTo(xBl + radius, yBl);\r\n      ctx.lineTo(xBr - radius, yBr);\r\n      ctx.quadraticCurveTo(xBr, yBr, xBr, yBr - radius);\r\n      ctx.lineTo(xTr, yTr + radius);\r\n      ctx.quadraticCurveTo(xTr, yTr, xTr - radius, yTr);\r\n      ctx.lineTo(xTl + radius, yTl);\r\n      ctx.quadraticCurveTo(xTl, yTl, xTl, yTl + radius);\r\n      ctx.lineTo(xBl, yBl - radius);\r\n      ctx.quadraticCurveTo(xBl, yBl, xBl + radius, yBl);\r\n    } else {\r\n      // Positive Value\r\n      ctx.moveTo(x + radius, y);\r\n      ctx.lineTo(x + width - radius, y);\r\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\r\n      ctx.lineTo(x + width, y + height - radius);\r\n      ctx.quadraticCurveTo(\r\n        x + width,\r\n        y + height,\r\n        x + width - radius,\r\n        y + height\r\n      );\r\n      ctx.lineTo(x + radius, y + height);\r\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\r\n      ctx.lineTo(x, y + radius);\r\n      ctx.quadraticCurveTo(x, y, x + radius, y);\r\n    }\r\n  }\r\n\r\n  ctx.fill();\r\n  if (borderWidth) {\r\n    ctx.stroke();\r\n  }\r\n}\r\n\r\nChart.helpers.extend(Chart.elements.Rectangle.prototype, {\r\n  draw\r\n});\r\n","import { createMuiTheme, colors } from '@material-ui/core';\r\nimport shadows from './shadows';\r\nimport typography from './typography';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    background: {\r\n      dark: '#F4F6F8',\r\n      default: colors.common.white,\r\n      paper: colors.common.white\r\n    },\r\n    primary: {\r\n      main: colors.indigo[500]\r\n    },\r\n    secondary: {\r\n      main: colors.indigo[500]\r\n    },\r\n    text: {\r\n      primary: colors.blueGrey[900],\r\n      secondary: colors.blueGrey[600]\r\n    }\r\n  },\r\n  shadows,\r\n  typography\r\n});\r\n\r\nexport default theme;\r\n","export default [\r\n  'none',\r\n  '0 0 0 1px rgba(63,63,68,0.05), 0 1px 2px 0 rgba(63,63,68,0.15)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 2px 2px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 8px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 5px 8px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 12px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 12px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 16px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 16px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 8px 18px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 9px 18px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 10px 20px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 11px 20px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 12px 22px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 13px 22px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 14px 24px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 16px 28px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 18px 30px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 20px 32px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 22px 34px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 24px 36px -8px rgba(0,0,0,0.25)'\r\n];\r\n","export default {\r\n  h1: {\r\n    fontWeight: 500,\r\n    fontSize: 35,\r\n    letterSpacing: '-0.24px'\r\n  },\r\n  h2: {\r\n    fontWeight: 500,\r\n    fontSize: 29,\r\n    letterSpacing: '-0.24px'\r\n  },\r\n  h3: {\r\n    fontWeight: 500,\r\n    fontSize: 24,\r\n    letterSpacing: '-0.06px'\r\n  },\r\n  h4: {\r\n    fontWeight: 500,\r\n    fontSize: 20,\r\n    letterSpacing: '-0.06px'\r\n  },\r\n  h5: {\r\n    fontWeight: 500,\r\n    fontSize: 16,\r\n    letterSpacing: '-0.05px'\r\n  },\r\n  h6: {\r\n    fontWeight: 500,\r\n    fontSize: 14,\r\n    letterSpacing: '-0.05px'\r\n  },\r\n  overline: {\r\n    fontWeight: 500\r\n  }\r\n};\r\n","import React from 'react';\r\nimport { NavLink as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Button,\r\n  ListItem,\r\n  makeStyles\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  item: {\r\n    display: 'flex',\r\n    paddingTop: 0,\r\n    paddingBottom: 0\r\n  },\r\n  button: {\r\n    color: theme.palette.text.secondary,\r\n    fontWeight: theme.typography.fontWeightMedium,\r\n    justifyContent: 'flex-start',\r\n    letterSpacing: 0,\r\n    padding: '10px 8px',\r\n    textTransform: 'none',\r\n    width: '100%'\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  title: {\r\n    marginRight: 'auto'\r\n  },\r\n  active: {\r\n    color: theme.palette.primary.main,\r\n    '& $title': {\r\n      fontWeight: theme.typography.fontWeightMedium\r\n    },\r\n    '& $icon': {\r\n      color: theme.palette.primary.main\r\n    }\r\n  }\r\n}));\r\n\r\nconst NavItem = ({\r\n  className,\r\n  href,\r\n  icon: Icon,\r\n  title,\r\n  ...rest\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <ListItem\r\n      className={clsx(classes.item, className)}\r\n      disableGutters\r\n      {...rest}\r\n    >\r\n      <Button\r\n        activeClassName={classes.active}\r\n        className={classes.button}\r\n        component={RouterLink}\r\n        to={href}\r\n      >\r\n        {Icon && (\r\n          <Icon\r\n            className={classes.icon}\r\n            size=\"20\"\r\n          />\r\n        )}\r\n        <span className={classes.title}>\r\n          {title}\r\n        </span>\r\n      </Button>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nNavItem.propTypes = {\r\n  className: PropTypes.string,\r\n  href: PropTypes.string,\r\n  icon: PropTypes.elementType,\r\n  title: PropTypes.string\r\n};\r\n\r\nexport default NavItem;\r\n","import React, { useEffect } from 'react';\r\nimport { Link as RouterLink, useLocation } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Divider,\r\n  Drawer,\r\n  Hidden,\r\n  List,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport {\r\n  AlertCircle as AlertCircleIcon,\r\n  BarChart as BarChartIcon,\r\n  Lock as LockIcon,\r\n  Settings as SettingsIcon,\r\n  ShoppingBag as ShoppingBagIcon,\r\n  User as UserIcon,\r\n  UserPlus as UserPlusIcon,\r\n  Users as UsersIcon\r\n} from 'react-feather';\r\nimport NavItem from './NavItem';\r\n\r\nconst user = {\r\n  avatar: '/static/images/avatars/avatar_6.png',\r\n  jobTitle: 'Senior Developer',\r\n  name: 'Katarina Smith'\r\n};\r\n\r\nconst items = [\r\n  // {\r\n  //   href: '/app/dashboard',\r\n  //   icon: BarChartIcon,\r\n  //   title: 'Dashboard'\r\n  // },\r\n  {\r\n    href: '/app/customers',\r\n    icon: UsersIcon,\r\n    title: 'Customers'\r\n  },\r\n  // {\r\n  //   href: '/app/products',\r\n  //   icon: ShoppingBagIcon,\r\n  //   title: 'Products'\r\n  // },\r\n  // {\r\n  //   href: '/app/account',\r\n  //   icon: UserIcon,\r\n  //   title: 'Account'\r\n  // },\r\n  // {\r\n  //   href: '/app/settings',\r\n  //   icon: SettingsIcon,\r\n  //   title: 'Settings'\r\n  // },\r\n  {\r\n    href: '/login',\r\n    icon: LockIcon,\r\n    title: 'Logout'\r\n  },\r\n  // {\r\n  //   href: '/register',\r\n  //   icon: UserPlusIcon,\r\n  //   title: 'Register'\r\n  // },\r\n  // {\r\n  //   href: '/404',\r\n  //   icon: AlertCircleIcon,\r\n  //   title: 'Error'\r\n  // }\r\n];\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  mobileDrawer: {\r\n    width: 256\r\n  },\r\n  desktopDrawer: {\r\n    width: 256,\r\n    top: 64,\r\n    height: 'calc(100% - 64px)'\r\n  },\r\n  avatar: {\r\n    cursor: 'pointer',\r\n    width: 64,\r\n    height: 64\r\n  }\r\n}));\r\n\r\nconst NavBar = ({ onMobileClose, openMobile }) => {\r\n  const classes = useStyles();\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    if (openMobile && onMobileClose) {\r\n      onMobileClose();\r\n    }\r\n  }, [location.pathname]);\r\n\r\n  const content = (\r\n    <Box\r\n      height=\"100%\"\r\n      display=\"flex\"\r\n      flexDirection=\"column\"\r\n    >\r\n      <Box\r\n        alignItems=\"center\"\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n        p={2}\r\n      >\r\n        <Avatar\r\n          className={classes.avatar}\r\n          component={RouterLink}\r\n          src={user.avatar}\r\n          to=\"/app/account\"\r\n        />\r\n        <Typography\r\n          className={classes.name}\r\n          color=\"textPrimary\"\r\n          variant=\"h5\"\r\n        >\r\n          {user.name}\r\n        </Typography>\r\n        <Typography\r\n          color=\"textSecondary\"\r\n          variant=\"body2\"\r\n        >\r\n          {user.jobTitle}\r\n        </Typography>\r\n      </Box>\r\n      <Divider />\r\n      <Box p={2}>\r\n        <List>\r\n          {items.map((item) => (\r\n            <NavItem\r\n              href={item.href}\r\n              key={item.title}\r\n              title={item.title}\r\n              icon={item.icon}\r\n            />\r\n          ))}\r\n        </List>\r\n      </Box>\r\n      <Box flexGrow={1} />\r\n      \r\n    </Box>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Hidden lgUp>\r\n        <Drawer\r\n          anchor=\"left\"\r\n          classes={{ paper: classes.mobileDrawer }}\r\n          onClose={onMobileClose}\r\n          open={openMobile}\r\n          variant=\"temporary\"\r\n        >\r\n          {content}\r\n        </Drawer>\r\n      </Hidden>\r\n      <Hidden mdDown>\r\n        <Drawer\r\n          anchor=\"left\"\r\n          classes={{ paper: classes.desktopDrawer }}\r\n          open\r\n          variant=\"persistent\"\r\n        >\r\n          {content}\r\n        </Drawer>\r\n      </Hidden>\r\n    </>\r\n  );\r\n};\r\n\r\nNavBar.propTypes = {\r\n  onMobileClose: PropTypes.func,\r\n  openMobile: PropTypes.bool\r\n};\r\n\r\nNavBar.defaultProps = {\r\n  onMobileClose: () => {},\r\n  openMobile: false\r\n};\r\n\r\nexport default NavBar;\r\n","import React from 'react';\r\n\r\nconst Logo = (props) => {\r\n  return (\r\n    <img\r\n      alt=\"Logo\"\r\n      src=\"/static/logo.svg\"\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  AppBar,\r\n  Badge,\r\n  Box,\r\n  Hidden,\r\n  IconButton,\r\n  Toolbar,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport NotificationsIcon from '@material-ui/icons/NotificationsOutlined';\r\nimport InputIcon from '@material-ui/icons/Input';\r\nimport Logo from 'src/components/Logo';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  avatar: {\r\n    width: 60,\r\n    height: 60\r\n  }\r\n}));\r\n\r\nconst TopBar = ({\r\n  className,\r\n  onMobileNavOpen,\r\n  ...rest\r\n}) => {\r\n  const classes = useStyles();\r\n  const [notifications] = useState([]);\r\n\r\n  return (\r\n    <AppBar\r\n      className={clsx(classes.root, className)}\r\n      elevation={0}\r\n      {...rest}\r\n    >\r\n      <Toolbar>\r\n        <RouterLink to=\"/\">\r\n          <Logo />\r\n        </RouterLink>\r\n        <Box flexGrow={1} />\r\n        <Hidden mdDown>\r\n          <IconButton color=\"inherit\">\r\n            <Badge\r\n              badgeContent={notifications.length}\r\n              color=\"primary\"\r\n              variant=\"dot\"\r\n            >\r\n              <NotificationsIcon />\r\n            </Badge>\r\n          </IconButton>\r\n          <IconButton color=\"inherit\">\r\n            <InputIcon />\r\n          </IconButton>\r\n        </Hidden>\r\n        <Hidden lgUp>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            onClick={onMobileNavOpen}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n        </Hidden>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nTopBar.propTypes = {\r\n  className: PropTypes.string,\r\n  onMobileNavOpen: PropTypes.func\r\n};\r\n\r\nexport default TopBar;\r\n","import React, { useState } from 'react';\r\nimport { Outlet } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport NavBar from './NavBar';\r\nimport TopBar from './TopBar';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    display: 'flex',\r\n    height: '100%',\r\n    overflow: 'hidden',\r\n    width: '100%'\r\n  },\r\n  wrapper: {\r\n    display: 'flex',\r\n    flex: '1 1 auto',\r\n    overflow: 'hidden',\r\n    paddingTop: 64,\r\n    [theme.breakpoints.up('lg')]: {\r\n      paddingLeft: 256\r\n    }\r\n  },\r\n  contentContainer: {\r\n    display: 'flex',\r\n    flex: '1 1 auto',\r\n    overflow: 'hidden'\r\n  },\r\n  content: {\r\n    flex: '1 1 auto',\r\n    height: '100%',\r\n    overflow: 'auto'\r\n  }\r\n}));\r\n\r\nconst DashboardLayout = () => {\r\n  const classes = useStyles();\r\n  const [isMobileNavOpen, setMobileNavOpen] = useState(false);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <TopBar onMobileNavOpen={() => setMobileNavOpen(true)} />\r\n      <NavBar\r\n        onMobileClose={() => setMobileNavOpen(false)}\r\n        openMobile={isMobileNavOpen}\r\n      />\r\n      <div className={classes.wrapper}>\r\n        <div className={classes.contentContainer}>\r\n          <div className={classes.content}>\r\n            <Outlet />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardLayout;\r\n","import React from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport Logo from 'src/components/Logo';\r\n\r\nconst useStyles = makeStyles(({\r\n  root: {},\r\n  toolbar: {\r\n    height: 64\r\n  }\r\n}));\r\n\r\nconst TopBar = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <AppBar\r\n      className={clsx(classes.root, className)}\r\n      elevation={0}\r\n      {...rest}\r\n    >\r\n      <Toolbar className={classes.toolbar}>\r\n        <RouterLink to=\"/\">\r\n          <Logo />\r\n        </RouterLink>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nTopBar.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default TopBar;\r\n","import React from 'react';\r\nimport { Outlet } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport TopBar from './TopBar';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.default,\r\n    display: 'flex',\r\n    height: '100%',\r\n    overflow: 'hidden',\r\n    width: '100%'\r\n  },\r\n  wrapper: {\r\n    display: 'flex',\r\n    flex: '1 1 auto',\r\n    overflow: 'hidden',\r\n    paddingTop: 64\r\n  },\r\n  contentContainer: {\r\n    display: 'flex',\r\n    flex: '1 1 auto',\r\n    overflow: 'hidden'\r\n  },\r\n  content: {\r\n    flex: '1 1 auto',\r\n    height: '100%',\r\n    overflow: 'auto'\r\n  }\r\n}));\r\n\r\nconst MainLayout = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <TopBar />\r\n      <div className={classes.wrapper}>\r\n        <div className={classes.contentContainer}>\r\n          <div className={classes.content}>\r\n            <Outlet />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainLayout;\r\n","import React, { forwardRef } from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Page = forwardRef(({\r\n  children,\r\n  title = '',\r\n  ...rest\r\n}, ref) => {\r\n  return (\r\n    <div\r\n      ref={ref}\r\n      {...rest}\r\n    >\r\n      <Helmet>\r\n        <title>{title}</title>\r\n      </Helmet>\r\n      {children}\r\n    </div>\r\n  );\r\n});\r\n\r\nPage.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  title: PropTypes.string\r\n};\r\n\r\nexport default Page;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport moment from 'moment';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Divider,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\n\r\nconst user = {\r\n  avatar: '/static/images/avatars/avatar_6.png',\r\n  city: 'Los Angeles',\r\n  country: 'USA',\r\n  jobTitle: 'Senior Developer',\r\n  name: 'Katarina Smith',\r\n  timezone: 'GTM-7'\r\n};\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  avatar: {\r\n    height: 100,\r\n    width: 100\r\n  }\r\n}));\r\n\r\nconst Profile = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardContent>\r\n        <Box\r\n          alignItems=\"center\"\r\n          display=\"flex\"\r\n          flexDirection=\"column\"\r\n        >\r\n          <Avatar\r\n            className={classes.avatar}\r\n            src={user.avatar}\r\n          />\r\n          <Typography\r\n            color=\"textPrimary\"\r\n            gutterBottom\r\n            variant=\"h3\"\r\n          >\r\n            {user.name}\r\n          </Typography>\r\n          <Typography\r\n            color=\"textSecondary\"\r\n            variant=\"body1\"\r\n          >\r\n            {`${user.city} ${user.country}`}\r\n          </Typography>\r\n          <Typography\r\n            className={classes.dateText}\r\n            color=\"textSecondary\"\r\n            variant=\"body1\"\r\n          >\r\n            {`${moment().format('hh:mm A')} ${user.timezone}`}\r\n          </Typography>\r\n        </Box>\r\n      </CardContent>\r\n      <Divider />\r\n      <CardActions>\r\n        <Button\r\n          color=\"primary\"\r\n          fullWidth\r\n          variant=\"text\"\r\n        >\r\n          Upload picture\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nProfile.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Profile;\r\n","import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  Grid,\r\n  TextField,\r\n  makeStyles\r\n} from '@material-ui/core';\r\n\r\nconst states = [\r\n  {\r\n    value: 'alabama',\r\n    label: 'Alabama'\r\n  },\r\n  {\r\n    value: 'new-york',\r\n    label: 'New York'\r\n  },\r\n  {\r\n    value: 'san-francisco',\r\n    label: 'San Francisco'\r\n  }\r\n];\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst ProfileDetails = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n  const [values, setValues] = useState({\r\n    firstName: 'Katarina',\r\n    lastName: 'Smith',\r\n    email: 'demo@devias.io',\r\n    phone: '',\r\n    state: 'Alabama',\r\n    country: 'USA'\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    setValues({\r\n      ...values,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  return (\r\n    <form\r\n      autoComplete=\"off\"\r\n      noValidate\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <Card>\r\n        <CardHeader\r\n          subheader=\"The information can be edited\"\r\n          title=\"Profile\"\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                helperText=\"Please specify the first name\"\r\n                label=\"First name\"\r\n                name=\"firstName\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.firstName}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Last name\"\r\n                name=\"lastName\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.lastName}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.email}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Phone Number\"\r\n                name=\"phone\"\r\n                onChange={handleChange}\r\n                type=\"number\"\r\n                value={values.phone}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Country\"\r\n                name=\"country\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.country}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Select State\"\r\n                name=\"state\"\r\n                onChange={handleChange}\r\n                required\r\n                select\r\n                SelectProps={{ native: true }}\r\n                value={values.state}\r\n                variant=\"outlined\"\r\n              >\r\n                {states.map((option) => (\r\n                  <option\r\n                    key={option.value}\r\n                    value={option.value}\r\n                  >\r\n                    {option.label}\r\n                  </option>\r\n                ))}\r\n              </TextField>\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <Box\r\n          display=\"flex\"\r\n          justifyContent=\"flex-end\"\r\n          p={2}\r\n        >\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n          >\r\n            Save details\r\n          </Button>\r\n        </Box>\r\n      </Card>\r\n    </form>\r\n  );\r\n};\r\n\r\nProfileDetails.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default ProfileDetails;\r\n","import React from 'react';\r\nimport {\r\n  Container,\r\n  Grid,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport Page from 'src/components/Page';\r\nimport Profile from './Profile';\r\nimport ProfileDetails from './ProfileDetails';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nconst Account = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Page\r\n      className={classes.root}\r\n      title=\"Account\"\r\n    >\r\n      <Container maxWidth=\"lg\">\r\n        <Grid\r\n          container\r\n          spacing={3}\r\n        >\r\n          <Grid\r\n            item\r\n            lg={4}\r\n            md={6}\r\n            xs={12}\r\n          >\r\n            <Profile />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            lg={8}\r\n            md={6}\r\n            xs={12}\r\n          >\r\n            <ProfileDetails />\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default Account;\r\n","export default (name = '') => name\r\n  .replace(/\\s+/, ' ')\r\n  .split(' ')\r\n  .slice(0, 2)\r\n  .map((v) => v && v[0].toUpperCase())\r\n  .join('');\r\n","import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport getInitials from 'src/utils/getInitials';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nconst Results = ({ className, customers, page, setPage, ...rest }) => {\r\n  const classes = useStyles();\r\n  const [selectedCustomerIds, setSelectedCustomerIds] = useState([]);\r\n  const [limit, setLimit] = useState(10);\r\n  \r\n\r\n  const handleSelectAll = (event) => {\r\n    let newSelectedCustomerIds;\r\n\r\n    if (event.target.checked) {\r\n      newSelectedCustomerIds = customers.map((customer) => customer.id);\r\n    } else {\r\n      newSelectedCustomerIds = [];\r\n    }\r\n\r\n    setSelectedCustomerIds(newSelectedCustomerIds);\r\n  };\r\n\r\n  const handleSelectOne = (event, id) => {\r\n    const selectedIndex = selectedCustomerIds.indexOf(id);\r\n    let newSelectedCustomerIds = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds.slice(1));\r\n    } else if (selectedIndex === selectedCustomerIds.length - 1) {\r\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(\r\n        selectedCustomerIds.slice(0, selectedIndex),\r\n        selectedCustomerIds.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelectedCustomerIds(newSelectedCustomerIds);\r\n  };\r\n\r\n  const handleLimitChange = (event) => {\r\n    setLimit(event.target.value);\r\n  };\r\n\r\n  const handlePageChange = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const approved = <span style={{backgroundColor:'green', padding:'4px', color:'white', borderRadius:'5px'}}>Yes</span>;\r\n  const notApproved = <span style={{backgroundColor:'red', padding:'4px', color:'white', borderRadius:'5px'}}>No</span>;\r\n  const pending = <span style={{backgroundColor:'#30b398', padding:'4px', color:'white', borderRadius:'5px'}}>N/A</span>;\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <PerfectScrollbar>\r\n        <Box minWidth={1050}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell padding=\"checkbox\">\r\n                  <Checkbox\r\n                    checked={selectedCustomerIds.length === customers.length}\r\n                    color=\"primary\"\r\n                    indeterminate={\r\n                      selectedCustomerIds.length > 0\r\n                      && selectedCustomerIds.length < customers.length\r\n                    }\r\n                    onChange={handleSelectAll}\r\n                  />\r\n                </TableCell>\r\n                <TableCell>\r\n                  Name\r\n                </TableCell>\r\n                <TableCell>\r\n                  Email\r\n                </TableCell>\r\n                <TableCell>\r\n                  Beautician\r\n                </TableCell>\r\n                <TableCell>\r\n                  Approved\r\n                </TableCell>\r\n                <TableCell>\r\n                  Registration date\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {customers.slice(0, limit).map((customer) => (\r\n                <TableRow\r\n                  hover\r\n                  key={customer.id}\r\n                  selected={selectedCustomerIds.indexOf(customer.id) !== -1}\r\n                >\r\n                  <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                      checked={selectedCustomerIds.indexOf(customer.id) !== -1}\r\n                      onChange={(event) => handleSelectOne(event, customer.id)}\r\n                      value=\"true\"\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Box\r\n                      alignItems=\"center\"\r\n                      display=\"flex\"\r\n                    >\r\n                      <Avatar\r\n                        className={classes.avatar}\r\n                        src={customer.avatarUrl}\r\n                      >\r\n                        {getInitials(customer.name)}\r\n                      </Avatar>\r\n                      <Typography\r\n                        color=\"textPrimary\"\r\n                        variant=\"body1\"\r\n                      >\r\n                        {customer.name}\r\n                      </Typography>\r\n                    </Box>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {customer.email}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {customer.isSeller ? 'Yes' : 'No'}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {customer.isSeller ? (customer.sellerIsApproved == 'true' ? approved : notApproved ): pending}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {moment(customer.created).format('DD/MM/YYYY')}\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </Box>\r\n      </PerfectScrollbar>\r\n      <TablePagination\r\n        component=\"div\"\r\n        count={customers.length}\r\n        onChangePage={handlePageChange}\r\n        onChangeRowsPerPage={handleLimitChange}\r\n        page={page}\r\n        rowsPerPage={limit}\r\n        rowsPerPageOptions={['']}\r\n      />\r\n    </Card>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  customers: PropTypes.array.isRequired\r\n};\r\n\r\nexport default Results;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport {\r\n  Grid,\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  TextField,\r\n  InputAdornment,\r\n  SvgIcon,\r\n  makeStyles,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem\r\n} from '@material-ui/core';\r\nimport { Search as SearchIcon } from 'react-feather';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  formControl: {\r\n    width: '100%',\r\n  }\r\n}));\r\n\r\nconst Toolbar = ({ className, searchUsers, ...rest }) => {\r\n  const classes = useStyles();\r\n  const [type, setType] = useState('');\r\n  const [query, setQuery] = useState('');\r\n\r\n  const handleChange = (event) => {\r\n    setType(event.target.value);\r\n  };\r\n\r\n  const handleQueryChange = (event) => {\r\n    setQuery(event.target.value);\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <Box mt={3}>\r\n        <Card>\r\n          <CardContent>\r\n            <Box>\r\n            <Grid\r\n              container\r\n              spacing={3}\r\n            >\r\n              <Grid\r\n                item\r\n                sm={4}\r\n                xs={6}\r\n              >\r\n                <TextField\r\n                  fullWidth\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <SvgIcon\r\n                          fontSize=\"small\"\r\n                          color=\"action\"\r\n                        >\r\n                          <SearchIcon />\r\n                        </SvgIcon>\r\n                      </InputAdornment>\r\n                    )\r\n                  }}\r\n                  placeholder=\"Search customer\"\r\n                  variant=\"outlined\"\r\n                  onChange={handleQueryChange}\r\n                  value={query}\r\n                />\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                sm={4}\r\n                xs={6}\r\n              >\r\n                <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                  <InputLabel id=\"demo-simple-select-outlined-label\">Type</InputLabel>\r\n                  <Select\r\n                    labelId=\"demo-simple-select-outlined-label\"\r\n                    id=\"demo-simple-select-outlined\"\r\n                    value={type}\r\n                    onChange={handleChange}\r\n                    label=\"type\"\r\n                  >\r\n                    <MenuItem value=\"\">\r\n                      <em>None</em>\r\n                    </MenuItem>\r\n                    <MenuItem value={'all'}>All</MenuItem>\r\n                    <MenuItem value={'customers'}>Customers</MenuItem>\r\n                    <MenuItem value={'beauticians'}>Beauticians</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n                \r\n              </Grid>\r\n              <Grid\r\n                item\r\n                sm={4}\r\n                xs={6}\r\n                style={{'display':'flex', 'alignItems':'center'}}\r\n              >\r\n                <Button\r\n                  color=\"primary\"\r\n                  variant=\"contained\"\r\n                  onClick={() => {searchUsers(type, query)}}\r\n                >\r\n                  Search\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n            </Box>\r\n          </CardContent>\r\n        </Card>\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nToolbar.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Toolbar;\r\n","import { v4 as uuid } from 'uuid';\r\n\r\nexport default [\r\n  {\r\n    id: uuid(),\r\n    address: {\r\n      country: 'USA',\r\n      state: 'West Virginia',\r\n      city: 'Parkersburg',\r\n      street: '2849 Fulton Street'\r\n    },\r\n    avatarUrl: '/static/images/avatars/avatar_3.png',\r\n    createdAt: 1555016400000,\r\n    email: 'ekaterina.tankova@devias.io',\r\n    name: 'Ekaterina Tankova',\r\n    phone: '304-428-3097'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    address: {\r\n      country: 'USA',\r\n      state: 'Bristow',\r\n      city: 'Iowa',\r\n      street: '1865  Pleasant Hill Road'\r\n    },\r\n    avatarUrl: '/static/images/avatars/avatar_4.png',\r\n    createdAt: 1555016400000,\r\n    email: 'cao.yu@devias.io',\r\n    name: 'Cao Yu',\r\n    phone: '712-351-5711'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    address: {\r\n      country: 'USA',\r\n      state: 'Georgia',\r\n      city: 'Atlanta',\r\n      street: '4894  Lakeland Park Drive'\r\n    },\r\n    avatarUrl: '/static/images/avatars/avatar_2.png',\r\n    createdAt: 1555016400000,\r\n    email: 'alexa.richardson@devias.io',\r\n    name: 'Alexa Richardson',\r\n    phone: '770-635-2682'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    address: {\r\n      country: 'USA',\r\n      state: 'Ohio',\r\n      city: 'Dover',\r\n      street: '4158  Hedge Street'\r\n    },\r\n    avatarUrl: '/static/images/avatars/avatar_5.png',\r\n    createdAt: 1554930000000,\r\n    email: 'anje.keizer@devias.io',\r\n    name: 'Anje Keizer',\r\n    phone: '908-691-3242'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    address: {\r\n      country: 'USA',\r\n      state: 'Texas',\r\n      city: 'Dallas',\r\n      street: '75247'\r\n    },\r\n    avatarUrl: '/static/images/avatars/avatar_6.png',\r\n    createdAt: 1554757200000,\r\n    email: 'clarke.gillebert@devias.io',\r\n    name: 'Clarke Gillebert',\r\n    phone: '972-333-4106'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    address: {\r\n      country: 'USA',\r\n      state: 'California',\r\n      city: 'Bakerfield',\r\n      street: '317 Angus Road'\r\n    },\r\n    avatarUrl: '/static/images/avatars/avatar_1.png',\r\n    createdAt: 1554670800000,\r\n    email: 'adam.denisov@devias.io',\r\n    name: 'Adam Denisov',\r\n    phone: '858-602-3409'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    address: {\r\n      country: 'USA',\r\n      state: 'California',\r\n      city: 'Redondo Beach',\r\n      street: '2188  Armbrester Drive'\r\n    },\r\n    avatarUrl: '/static/images/avatars/avatar_7.png',\r\n    createdAt: 1554325200000,\r\n    email: 'ava.gregoraci@devias.io',\r\n    name: 'Ava Gregoraci',\r\n    phone: '415-907-2647'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    address: {\r\n      country: 'USA',\r\n      state: 'Nevada',\r\n      city: 'Las Vegas',\r\n      street: '1798  Hickory Ridge Drive'\r\n    },\r\n    avatarUrl: '/static/images/avatars/avatar_8.png',\r\n    createdAt: 1523048400000,\r\n    email: 'emilee.simchenko@devias.io',\r\n    name: 'Emilee Simchenko',\r\n    phone: '702-661-1654'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    address: {\r\n      country: 'USA',\r\n      state: 'Michigan',\r\n      city: 'Detroit',\r\n      street: '3934  Wildrose Lane'\r\n    },\r\n    avatarUrl: '/static/images/avatars/avatar_9.png',\r\n    createdAt: 1554702800000,\r\n    email: 'kwak.seong.min@devias.io',\r\n    name: 'Kwak Seong-Min',\r\n    phone: '313-812-8947'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    address: {\r\n      country: 'USA',\r\n      state: 'Utah',\r\n      city: 'Salt Lake City',\r\n      street: '368 Lamberts Branch Road'\r\n    },\r\n    avatarUrl: '/static/images/avatars/avatar_10.png',\r\n    createdAt: 1522702800000,\r\n    email: 'merrile.burgett@devias.io',\r\n    name: 'Merrile Burgett',\r\n    phone: '801-301-7894'\r\n  }\r\n];\r\n","import axios from 'axios';\r\nconst API = process.env.REACT_APP_API_URL;\r\n\r\nconst options = {\r\n\t'content-type':'application/json'\r\n};\r\n\r\nexport const getUsers = (data, page=0, type, success, failure) => {\r\n\r\n\r\n\taxios.\r\n\t\tpost(`${API}/users?page=${page}`, data, {\r\n\t\t\theaders: options\r\n\t\t})\r\n\t\t.then(res => {\r\n\t\t\tconsole.log(res);\r\n\r\n\t\t\tif(res.data.success) {\r\n\t\t\t\tsuccess(res.data);\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log('failed fetching users - from userMethods');\r\n\t\t\t\tfailure();\r\n\t\t\t}\r\n\t\t})\r\n\r\n}","import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Box,\r\n  Container,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport Page from 'src/components/Page';\r\nimport Results from './Results';\r\nimport Toolbar from './Toolbar';\r\nimport data from './data';\r\nimport { getUsers } from 'src/methods/userMethods';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nconst CustomerListView = () => {\r\n  const classes = useStyles();\r\n  const [customers, updateCustomers] = useState(null);\r\n  const [page, setPage] = useState(0);\r\n  const [error, setError] = useState(null);\r\n\r\n  const searchUsers = (type='', query='') => {\r\n\r\n    let data = null;\r\n    console.log('type ', type);\r\n\r\n    data = type == 'beauticians' ? {isSeller: true} : {isSeller: false};\r\n    console.log(data);\r\n\r\n    const success = (data) => {\r\n      setError(null);\r\n      updateCustomers(data.users);\r\n    }\r\n\r\n    const failure = () => {\r\n      setError(\"Could not fetch users\");\r\n    }\r\n\r\n    getUsers(data, page, type, success, failure);\r\n  }\r\n\r\n  useEffect(() => {\r\n    searchUsers();\r\n  }, [])\r\n\r\n  return (\r\n    <Page\r\n      className={classes.root}\r\n      title=\"Customers\"\r\n    >\r\n      <Container maxWidth={false}>\r\n        <Toolbar searchUsers={searchUsers} />\r\n        <Box mt={3}>\r\n        { customers && \r\n          <Results customers={customers} page={page} setPage={setPage} />\r\n        }\r\n        </Box>\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default CustomerListView;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Typography,\r\n  colors,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport MoneyIcon from '@material-ui/icons/Money';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100%'\r\n  },\r\n  avatar: {\r\n    backgroundColor: colors.red[600],\r\n    height: 56,\r\n    width: 56\r\n  },\r\n  differenceIcon: {\r\n    color: colors.red[900]\r\n  },\r\n  differenceValue: {\r\n    color: colors.red[900],\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst Budget = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardContent>\r\n        <Grid\r\n          container\r\n          justify=\"space-between\"\r\n          spacing={3}\r\n        >\r\n          <Grid item>\r\n            <Typography\r\n              color=\"textSecondary\"\r\n              gutterBottom\r\n              variant=\"h6\"\r\n            >\r\n              BUDGET\r\n            </Typography>\r\n            <Typography\r\n              color=\"textPrimary\"\r\n              variant=\"h3\"\r\n            >\r\n              $24,000\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Avatar className={classes.avatar}>\r\n              <MoneyIcon />\r\n            </Avatar>\r\n          </Grid>\r\n        </Grid>\r\n        <Box\r\n          mt={2}\r\n          display=\"flex\"\r\n          alignItems=\"center\"\r\n        >\r\n          <ArrowDownwardIcon className={classes.differenceIcon} />\r\n          <Typography\r\n            className={classes.differenceValue}\r\n            variant=\"body2\"\r\n          >\r\n            12%\r\n          </Typography>\r\n          <Typography\r\n            color=\"textSecondary\"\r\n            variant=\"caption\"\r\n          >\r\n            Since last month\r\n          </Typography>\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nBudget.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Budget;\r\n","import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport moment from 'moment';\r\nimport { v4 as uuid } from 'uuid';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  Chip,\r\n  Divider,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  TableSortLabel,\r\n  Tooltip,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\r\n\r\nconst data = [\r\n  {\r\n    id: uuid(),\r\n    ref: 'CDD1049',\r\n    amount: 30.5,\r\n    customer: {\r\n      name: 'Ekaterina Tankova'\r\n    },\r\n    createdAt: 1555016400000,\r\n    status: 'pending'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    ref: 'CDD1048',\r\n    amount: 25.1,\r\n    customer: {\r\n      name: 'Cao Yu'\r\n    },\r\n    createdAt: 1555016400000,\r\n    status: 'delivered'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    ref: 'CDD1047',\r\n    amount: 10.99,\r\n    customer: {\r\n      name: 'Alexa Richardson'\r\n    },\r\n    createdAt: 1554930000000,\r\n    status: 'refunded'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    ref: 'CDD1046',\r\n    amount: 96.43,\r\n    customer: {\r\n      name: 'Anje Keizer'\r\n    },\r\n    createdAt: 1554757200000,\r\n    status: 'pending'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    ref: 'CDD1045',\r\n    amount: 32.54,\r\n    customer: {\r\n      name: 'Clarke Gillebert'\r\n    },\r\n    createdAt: 1554670800000,\r\n    status: 'delivered'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    ref: 'CDD1044',\r\n    amount: 16.76,\r\n    customer: {\r\n      name: 'Adam Denisov'\r\n    },\r\n    createdAt: 1554670800000,\r\n    status: 'delivered'\r\n  }\r\n];\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  actions: {\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst LatestOrders = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n  const [orders] = useState(data);\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardHeader title=\"Latest Orders\" />\r\n      <Divider />\r\n      <PerfectScrollbar>\r\n        <Box minWidth={800}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>\r\n                  Order Ref\r\n                </TableCell>\r\n                <TableCell>\r\n                  Customer\r\n                </TableCell>\r\n                <TableCell sortDirection=\"desc\">\r\n                  <Tooltip\r\n                    enterDelay={300}\r\n                    title=\"Sort\"\r\n                  >\r\n                    <TableSortLabel\r\n                      active\r\n                      direction=\"desc\"\r\n                    >\r\n                      Date\r\n                    </TableSortLabel>\r\n                  </Tooltip>\r\n                </TableCell>\r\n                <TableCell>\r\n                  Status\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {orders.map((order) => (\r\n                <TableRow\r\n                  hover\r\n                  key={order.id}\r\n                >\r\n                  <TableCell>\r\n                    {order.ref}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {order.customer.name}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {moment(order.createdAt).format('DD/MM/YYYY')}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Chip\r\n                      color=\"primary\"\r\n                      label={order.status}\r\n                      size=\"small\"\r\n                    />\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </Box>\r\n      </PerfectScrollbar>\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"flex-end\"\r\n        p={2}\r\n      >\r\n        <Button\r\n          color=\"primary\"\r\n          endIcon={<ArrowRightIcon />}\r\n          size=\"small\"\r\n          variant=\"text\"\r\n        >\r\n          View all\r\n        </Button>\r\n      </Box>\r\n    </Card>\r\n  );\r\n};\r\n\r\nLatestOrders.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default LatestOrders;\r\n","import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { v4 as uuid } from 'uuid';\r\nimport moment from 'moment';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\r\n\r\nconst data = [\r\n  {\r\n    id: uuid(),\r\n    name: 'Dropbox',\r\n    imageUrl: '/static/images/products/product_1.png',\r\n    updatedAt: moment().subtract(2, 'hours')\r\n  },\r\n  {\r\n    id: uuid(),\r\n    name: 'Medium Corporation',\r\n    imageUrl: '/static/images/products/product_2.png',\r\n    updatedAt: moment().subtract(2, 'hours')\r\n  },\r\n  {\r\n    id: uuid(),\r\n    name: 'Slack',\r\n    imageUrl: '/static/images/products/product_3.png',\r\n    updatedAt: moment().subtract(3, 'hours')\r\n  },\r\n  {\r\n    id: uuid(),\r\n    name: 'Lyft',\r\n    imageUrl: '/static/images/products/product_4.png',\r\n    updatedAt: moment().subtract(5, 'hours')\r\n  },\r\n  {\r\n    id: uuid(),\r\n    name: 'GitHub',\r\n    imageUrl: '/static/images/products/product_5.png',\r\n    updatedAt: moment().subtract(9, 'hours')\r\n  }\r\n];\r\n\r\nconst useStyles = makeStyles(({\r\n  root: {\r\n    height: '100%'\r\n  },\r\n  image: {\r\n    height: 48,\r\n    width: 48\r\n  }\r\n}));\r\n\r\nconst LatestProducts = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n  const [products] = useState(data);\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardHeader\r\n        subtitle={`${products.length} in total`}\r\n        title=\"Latest Products\"\r\n      />\r\n      <Divider />\r\n      <List>\r\n        {products.map((product, i) => (\r\n          <ListItem\r\n            divider={i < products.length - 1}\r\n            key={product.id}\r\n          >\r\n            <ListItemAvatar>\r\n              <img\r\n                alt=\"Product\"\r\n                className={classes.image}\r\n                src={product.imageUrl}\r\n              />\r\n            </ListItemAvatar>\r\n            <ListItemText\r\n              primary={product.name}\r\n              secondary={`Updated ${product.updatedAt.fromNow()}`}\r\n            />\r\n            <IconButton\r\n              edge=\"end\"\r\n              size=\"small\"\r\n            >\r\n              <MoreVertIcon />\r\n            </IconButton>\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <Divider />\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"flex-end\"\r\n        p={2}\r\n      >\r\n        <Button\r\n          color=\"primary\"\r\n          endIcon={<ArrowRightIcon />}\r\n          size=\"small\"\r\n          variant=\"text\"\r\n        >\r\n          View all\r\n        </Button>\r\n      </Box>\r\n    </Card>\r\n  );\r\n};\r\n\r\nLatestProducts.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default LatestProducts;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  useTheme,\r\n  makeStyles,\r\n  colors\r\n} from '@material-ui/core';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Sales = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  const data = {\r\n    datasets: [\r\n      {\r\n        backgroundColor: colors.indigo[500],\r\n        data: [18, 5, 19, 27, 29, 19, 20],\r\n        label: 'This year'\r\n      },\r\n      {\r\n        backgroundColor: colors.grey[200],\r\n        data: [11, 20, 12, 29, 30, 25, 13],\r\n        label: 'Last year'\r\n      }\r\n    ],\r\n    labels: ['1 Aug', '2 Aug', '3 Aug', '4 Aug', '5 Aug', '6 Aug']\r\n  };\r\n\r\n  const options = {\r\n    animation: false,\r\n    cornerRadius: 20,\r\n    layout: { padding: 0 },\r\n    legend: { display: false },\r\n    maintainAspectRatio: false,\r\n    responsive: true,\r\n    scales: {\r\n      xAxes: [\r\n        {\r\n          barThickness: 12,\r\n          maxBarThickness: 10,\r\n          barPercentage: 0.5,\r\n          categoryPercentage: 0.5,\r\n          ticks: {\r\n            fontColor: theme.palette.text.secondary\r\n          },\r\n          gridLines: {\r\n            display: false,\r\n            drawBorder: false\r\n          }\r\n        }\r\n      ],\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            fontColor: theme.palette.text.secondary,\r\n            beginAtZero: true,\r\n            min: 0\r\n          },\r\n          gridLines: {\r\n            borderDash: [2],\r\n            borderDashOffset: [2],\r\n            color: theme.palette.divider,\r\n            drawBorder: false,\r\n            zeroLineBorderDash: [2],\r\n            zeroLineBorderDashOffset: [2],\r\n            zeroLineColor: theme.palette.divider\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    tooltips: {\r\n      backgroundColor: theme.palette.background.default,\r\n      bodyFontColor: theme.palette.text.secondary,\r\n      borderColor: theme.palette.divider,\r\n      borderWidth: 1,\r\n      enabled: true,\r\n      footerFontColor: theme.palette.text.secondary,\r\n      intersect: false,\r\n      mode: 'index',\r\n      titleFontColor: theme.palette.text.primary\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardHeader\r\n        action={(\r\n          <Button\r\n            endIcon={<ArrowDropDownIcon />}\r\n            size=\"small\"\r\n            variant=\"text\"\r\n          >\r\n            Last 7 days\r\n          </Button>\r\n        )}\r\n        title=\"Latest Sales\"\r\n      />\r\n      <Divider />\r\n      <CardContent>\r\n        <Box\r\n          height={400}\r\n          position=\"relative\"\r\n        >\r\n          <Bar\r\n            data={data}\r\n            options={options}\r\n          />\r\n        </Box>\r\n      </CardContent>\r\n      <Divider />\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"flex-end\"\r\n        p={2}\r\n      >\r\n        <Button\r\n          color=\"primary\"\r\n          endIcon={<ArrowRightIcon />}\r\n          size=\"small\"\r\n          variant=\"text\"\r\n        >\r\n          Overview\r\n        </Button>\r\n      </Box>\r\n    </Card>\r\n  );\r\n};\r\n\r\nSales.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Sales;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  LinearProgress,\r\n  Typography,\r\n  makeStyles,\r\n  colors\r\n} from '@material-ui/core';\r\nimport InsertChartIcon from '@material-ui/icons/InsertChartOutlined';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    height: '100%'\r\n  },\r\n  avatar: {\r\n    backgroundColor: colors.orange[600],\r\n    height: 56,\r\n    width: 56\r\n  }\r\n}));\r\n\r\nconst TasksProgress = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardContent>\r\n        <Grid\r\n          container\r\n          justify=\"space-between\"\r\n          spacing={3}\r\n        >\r\n          <Grid item>\r\n            <Typography\r\n              color=\"textSecondary\"\r\n              gutterBottom\r\n              variant=\"h6\"\r\n            >\r\n              TASKS PROGRESS\r\n            </Typography>\r\n            <Typography\r\n              color=\"textPrimary\"\r\n              variant=\"h3\"\r\n            >\r\n              75.5%\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Avatar className={classes.avatar}>\r\n              <InsertChartIcon />\r\n            </Avatar>\r\n          </Grid>\r\n        </Grid>\r\n        <Box mt={3}>\r\n          <LinearProgress\r\n            value={75.5}\r\n            variant=\"determinate\"\r\n          />\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nTasksProgress.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default TasksProgress;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Typography,\r\n  colors,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport PeopleIcon from '@material-ui/icons/PeopleOutlined';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100%'\r\n  },\r\n  avatar: {\r\n    backgroundColor: colors.green[600],\r\n    height: 56,\r\n    width: 56\r\n  },\r\n  differenceIcon: {\r\n    color: colors.green[900]\r\n  },\r\n  differenceValue: {\r\n    color: colors.green[900],\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst TotalCustomers = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardContent>\r\n        <Grid\r\n          container\r\n          justify=\"space-between\"\r\n          spacing={3}\r\n        >\r\n          <Grid item>\r\n            <Typography\r\n              color=\"textSecondary\"\r\n              gutterBottom\r\n              variant=\"h6\"\r\n            >\r\n              TOTAL CUSTOMERS\r\n            </Typography>\r\n            <Typography\r\n              color=\"textPrimary\"\r\n              variant=\"h3\"\r\n            >\r\n              1,600\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Avatar className={classes.avatar}>\r\n              <PeopleIcon />\r\n            </Avatar>\r\n          </Grid>\r\n        </Grid>\r\n        <Box\r\n          mt={2}\r\n          display=\"flex\"\r\n          alignItems=\"center\"\r\n        >\r\n          <ArrowUpwardIcon className={classes.differenceIcon} />\r\n          <Typography\r\n            className={classes.differenceValue}\r\n            variant=\"body2\"\r\n          >\r\n            16%\r\n          </Typography>\r\n          <Typography\r\n            color=\"textSecondary\"\r\n            variant=\"caption\"\r\n          >\r\n            Since last month\r\n          </Typography>\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nTotalCustomers.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default TotalCustomers;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Avatar,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Typography,\r\n  makeStyles,\r\n  colors\r\n} from '@material-ui/core';\r\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    height: '100%'\r\n  },\r\n  avatar: {\r\n    backgroundColor: colors.indigo[600],\r\n    height: 56,\r\n    width: 56\r\n  }\r\n}));\r\n\r\nconst TotalProfit = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardContent>\r\n        <Grid\r\n          container\r\n          justify=\"space-between\"\r\n          spacing={3}\r\n        >\r\n          <Grid item>\r\n            <Typography\r\n              color=\"textSecondary\"\r\n              gutterBottom\r\n              variant=\"h6\"\r\n            >\r\n              TOTAL PROFIT\r\n            </Typography>\r\n            <Typography\r\n              color=\"textPrimary\"\r\n              variant=\"h3\"\r\n            >\r\n              $23,200\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Avatar className={classes.avatar}>\r\n              <AttachMoneyIcon />\r\n            </Avatar>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nTotalProfit.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default TotalProfit;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { Doughnut } from 'react-chartjs-2';\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  Typography,\r\n  colors,\r\n  makeStyles,\r\n  useTheme\r\n} from '@material-ui/core';\r\nimport LaptopMacIcon from '@material-ui/icons/LaptopMac';\r\nimport PhoneIcon from '@material-ui/icons/Phone';\r\nimport TabletIcon from '@material-ui/icons/Tablet';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    height: '100%'\r\n  }\r\n}));\r\n\r\nconst TrafficByDevice = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  const data = {\r\n    datasets: [\r\n      {\r\n        data: [63, 15, 22],\r\n        backgroundColor: [\r\n          colors.indigo[500],\r\n          colors.red[600],\r\n          colors.orange[600]\r\n        ],\r\n        borderWidth: 8,\r\n        borderColor: colors.common.white,\r\n        hoverBorderColor: colors.common.white\r\n      }\r\n    ],\r\n    labels: ['Desktop', 'Tablet', 'Mobile']\r\n  };\r\n\r\n  const options = {\r\n    animation: false,\r\n    cutoutPercentage: 80,\r\n    layout: { padding: 0 },\r\n    legend: {\r\n      display: false\r\n    },\r\n    maintainAspectRatio: false,\r\n    responsive: true,\r\n    tooltips: {\r\n      backgroundColor: theme.palette.background.default,\r\n      bodyFontColor: theme.palette.text.secondary,\r\n      borderColor: theme.palette.divider,\r\n      borderWidth: 1,\r\n      enabled: true,\r\n      footerFontColor: theme.palette.text.secondary,\r\n      intersect: false,\r\n      mode: 'index',\r\n      titleFontColor: theme.palette.text.primary\r\n    }\r\n  };\r\n\r\n  const devices = [\r\n    {\r\n      title: 'Desktop',\r\n      value: 63,\r\n      icon: LaptopMacIcon,\r\n      color: colors.indigo[500]\r\n    },\r\n    {\r\n      title: 'Tablet',\r\n      value: 15,\r\n      icon: TabletIcon,\r\n      color: colors.red[600]\r\n    },\r\n    {\r\n      title: 'Mobile',\r\n      value: 23,\r\n      icon: PhoneIcon,\r\n      color: colors.orange[600]\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardHeader title=\"Traffic by Device\" />\r\n      <Divider />\r\n      <CardContent>\r\n        <Box\r\n          height={300}\r\n          position=\"relative\"\r\n        >\r\n          <Doughnut\r\n            data={data}\r\n            options={options}\r\n          />\r\n        </Box>\r\n        <Box\r\n          display=\"flex\"\r\n          justifyContent=\"center\"\r\n          mt={2}\r\n        >\r\n          {devices.map(({\r\n            color,\r\n            icon: Icon,\r\n            title,\r\n            value\r\n          }) => (\r\n            <Box\r\n              key={title}\r\n              p={1}\r\n              textAlign=\"center\"\r\n            >\r\n              <Icon color=\"action\" />\r\n              <Typography\r\n                color=\"textPrimary\"\r\n                variant=\"body1\"\r\n              >\r\n                {title}\r\n              </Typography>\r\n              <Typography\r\n                style={{ color }}\r\n                variant=\"h2\"\r\n              >\r\n                {value}\r\n                %\r\n              </Typography>\r\n            </Box>\r\n          ))}\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nTrafficByDevice.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default TrafficByDevice;\r\n","import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport getInitials from 'src/utils/getInitials';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nconst Results = ({ className, customers, ...rest }) => {\r\n  const classes = useStyles();\r\n  const [selectedCustomerIds, setSelectedCustomerIds] = useState([]);\r\n  const [limit, setLimit] = useState(10);\r\n  const [page, setPage] = useState(0);\r\n\r\n  const handleSelectAll = (event) => {\r\n    let newSelectedCustomerIds;\r\n\r\n    if (event.target.checked) {\r\n      newSelectedCustomerIds = customers.map((customer) => customer.id);\r\n    } else {\r\n      newSelectedCustomerIds = [];\r\n    }\r\n\r\n    setSelectedCustomerIds(newSelectedCustomerIds);\r\n  };\r\n\r\n  const handleSelectOne = (event, id) => {\r\n    const selectedIndex = selectedCustomerIds.indexOf(id);\r\n    let newSelectedCustomerIds = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds.slice(1));\r\n    } else if (selectedIndex === selectedCustomerIds.length - 1) {\r\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(\r\n        selectedCustomerIds.slice(0, selectedIndex),\r\n        selectedCustomerIds.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelectedCustomerIds(newSelectedCustomerIds);\r\n  };\r\n\r\n  const handleLimitChange = (event) => {\r\n    setLimit(event.target.value);\r\n  };\r\n\r\n  const handlePageChange = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <PerfectScrollbar>\r\n        <Box minWidth={1050}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell padding=\"checkbox\">\r\n                  <Checkbox\r\n                    checked={selectedCustomerIds.length === customers.length}\r\n                    color=\"primary\"\r\n                    indeterminate={\r\n                      selectedCustomerIds.length > 0\r\n                      && selectedCustomerIds.length < customers.length\r\n                    }\r\n                    onChange={handleSelectAll}\r\n                  />\r\n                </TableCell>\r\n                <TableCell>\r\n                  Name\r\n                </TableCell>\r\n                <TableCell>\r\n                  Email\r\n                </TableCell>\r\n                <TableCell>\r\n                  Location\r\n                </TableCell>\r\n                <TableCell>\r\n                  Phone\r\n                </TableCell>\r\n                <TableCell>\r\n                  Registration date\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {customers.slice(0, limit).map((customer) => (\r\n                <TableRow\r\n                  hover\r\n                  key={customer.id}\r\n                  selected={selectedCustomerIds.indexOf(customer.id) !== -1}\r\n                >\r\n                  <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                      checked={selectedCustomerIds.indexOf(customer.id) !== -1}\r\n                      onChange={(event) => handleSelectOne(event, customer.id)}\r\n                      value=\"true\"\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Box\r\n                      alignItems=\"center\"\r\n                      display=\"flex\"\r\n                    >\r\n                      <Avatar\r\n                        className={classes.avatar}\r\n                        src={customer.avatarUrl}\r\n                      >\r\n                        {getInitials(customer.name)}\r\n                      </Avatar>\r\n                      <Typography\r\n                        color=\"textPrimary\"\r\n                        variant=\"body1\"\r\n                      >\r\n                        {customer.name}\r\n                      </Typography>\r\n                    </Box>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {customer.email}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {`${customer.address.city}, ${customer.address.state}, ${customer.address.country}`}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {customer.phone}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {moment(customer.createdAt).format('DD/MM/YYYY')}\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </Box>\r\n      </PerfectScrollbar>\r\n      <TablePagination\r\n        component=\"div\"\r\n        count={customers.length}\r\n        onChangePage={handlePageChange}\r\n        onChangeRowsPerPage={handleLimitChange}\r\n        page={page}\r\n        rowsPerPage={limit}\r\n        rowsPerPageOptions={[5, 10, 25]}\r\n      />\r\n    </Card>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  customers: PropTypes.array.isRequired\r\n};\r\n\r\nexport default Results;\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Container,\r\n  Grid,\r\n  Box,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport Page from 'src/components/Page';\r\nimport Budget from './Budget';\r\nimport LatestOrders from './LatestOrders';\r\nimport LatestProducts from './LatestProducts';\r\nimport Sales from './Sales';\r\nimport TasksProgress from './TasksProgress';\r\nimport TotalCustomers from './TotalCustomers';\r\nimport TotalProfit from './TotalProfit';\r\nimport TrafficByDevice from './TrafficByDevice';\r\nimport ApprovalTable from './ApprovalTable';\r\nimport data from '../../customer/CustomerListView/data';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nconst Dashboard = () => {\r\n  const classes = useStyles();\r\n  const [customers] = useState(data);\r\n  const [limit, setLimit] = useState(10);\r\n  const [page, setPage] = useState(0);\r\n\r\n  const handleLimitChange = (event) => {\r\n    setLimit(event.target.value);\r\n  };\r\n\r\n  const handlePageChange = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  return (\r\n    <Page\r\n      className={classes.root}\r\n      title=\"Dashboard\"\r\n    >\r\n      <Container maxWidth={false}>\r\n        <Grid\r\n          container\r\n          spacing={3}\r\n        >\r\n          {\r\n            // <Grid\r\n            //           item\r\n            //           lg={3}\r\n            //           sm={6}\r\n            //           xl={3}\r\n            //           xs={12}\r\n            //         >\r\n            //           <Budget />\r\n            //         </Grid>\r\n            //         <Grid\r\n            //           item\r\n            //           lg={3}\r\n            //           sm={6}\r\n            //           xl={3}\r\n            //           xs={12}\r\n            //         >\r\n            //           <TotalCustomers />\r\n            //         </Grid>\r\n            //         <Grid\r\n            //           item\r\n            //           lg={3}\r\n            //           sm={6}\r\n            //           xl={3}\r\n            //           xs={12}\r\n            //         >\r\n            //           <TasksProgress />\r\n            //         </Grid>\r\n            //         <Grid\r\n            //           item\r\n            //           lg={3}\r\n            //           sm={6}\r\n            //           xl={3}\r\n            //           xs={12}\r\n            //         >\r\n            //           <TotalProfit />\r\n            //         </Grid>\r\n          }\r\n          <Box mt={3}>\r\n            <ApprovalTable customers={customers} />\r\n          </Box>\r\n          <Grid\r\n            item\r\n            lg={8}\r\n            md={12}\r\n            xl={9}\r\n            xs={12}\r\n          >\r\n            <Sales />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            lg={4}\r\n            md={6}\r\n            xl={3}\r\n            xs={12}\r\n          >\r\n            <TrafficByDevice />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            lg={4}\r\n            md={6}\r\n            xl={3}\r\n            xs={12}\r\n          >\r\n            <LatestProducts />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            lg={8}\r\n            md={12}\r\n            xl={9}\r\n            xs={12}\r\n          >\r\n            <LatestOrders />\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import axios from 'axios';\r\n\r\nconst API = process.env.REACT_APP_API_URL;\r\nconst options = {\r\n\t'content-type': 'application/json'\r\n};\r\n\r\nexport async function login(data, success, failure) {\r\n\r\n\tdata = {...data, notificationId: '45'};\r\n\r\n\taxios\r\n\t\t.post(`${API}/accounts/login`, data, {\r\n\t\t\theaders: options\r\n\t\t})\r\n\t\t.then(res => {\r\n\t\t\tconsole.log(res.data);\r\n\r\n\t\t\tif(res.data.success) {console.log(\"kjl\");\r\n\t\t\t\tsuccess(res.data);\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log('Auth faied');\r\n\t\t\t\tfailure(\"Invalid credentials\")\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch(e => {\r\n\t\t\tconsole.log(e);\r\n\t\t\tfailure(\"Could not login to your account\")\r\n\t\t})\r\n}\r\n\r\nexport async function authenticateAdmin(data, next) {\r\n    if (typeof window !== 'undefined') {\r\n        await localStorage.setItem('_BID__', JSON.stringify(data));\r\n        next();\r\n    }\r\n}\r\n\r\nexport async function isAuthenticatedAdmin() {\r\n    if (typeof window !== 'undefined') {\r\n\r\n        const _BID__ = await localStorage.getItem('_BID__')\r\n        if (_BID__) {\r\n            return JSON.parse(_BID__);\r\n        }\r\n    }\r\n    return false;\r\n};\r\n\r\nexport async function deauthenticateAdmin() {\r\n    if (typeof window !== 'undefined') {\r\n        await localStorage.removeItem('_BID__');\r\n    }\r\n};","export default __webpack_public_path__ + \"static/media/bg.53035973.jpg\";","import React, { useState, useEffect } from \"react\";\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useHistory, useNavigate } from 'react-router-dom';\r\n// import { Redirect } from 'react-router';\r\nimport { login, authenticateAdmin, isAuthenticatedAdmin } from '../../methods/authMethods.js';\r\nimport Background from '../../assets/images/bg.jpg';\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"100vh\",\r\n  },\r\n  image: {\r\n    backgroundImage: `url(${Background})`,\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundColor:\r\n      theme.palette.type === \"light\"\r\n        ? theme.palette.grey[50]\r\n        : theme.palette.grey[900],\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"center\",\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignInSide() {\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n  const [cred, setCred] = useState({\r\n    email: 'test@test.com',\r\n    password: 'test',\r\n  })\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n\r\n    // isAuthenticatedAdmin()\r\n    //   .then(res => {\r\n    //     if(res) {\r\n    //       console.log('Already logged in!')\r\n    //       console.log(res)\r\n    //       // history.push('/admin/dashboard')\r\n    //     }\r\n    //   })\r\n    //   .catch(e => {})\r\n      // eslint-disable-next-line\r\n  }, [])\r\n  \r\n\r\n  const handleCred = (e, name) => {\r\n    setCred({\r\n      ...cred,\r\n      [name]: e.target.value.trim(),\r\n    })\r\n  }\r\n\r\n  const onSubmitForm = e => {\r\n\r\n    e.preventDefault();\r\n\r\n    function success(data) {\r\n      authenticateAdmin(data, function() {\r\n        navigate('/app/customers')\r\n      })\r\n    }\r\n\r\n    function failure(error) {\r\n      setError(error);\r\n    }\r\n\r\n    login(cred, success, failure)\r\n  }\r\n\r\n  return (\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      <CssBaseline />\r\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        sm={8}\r\n        md={5}\r\n        component={Paper}\r\n        elevation={6}\r\n        square\r\n      >\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in\r\n          </Typography>\r\n          <form className={classes.form} metod=\"post\" onSubmit={onSubmitForm}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              color=\"secondary\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              value={cred.email}\r\n              onChange={(e) => handleCred(e, 'email')}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              value={cred.password}\r\n              onChange={(e) => handleCred(e, 'password')}\r\n            />\r\n            \r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              Sign In\r\n            </Button>\r\n            <Alert style={{display: !!error ? 'flex':'none'}} severity=\"error\">{error}</Alert>\r\n            {\r\n              // <Grid container>\r\n              //            <Grid item xs>\r\n              //              <Link href=\"#\" variant=\"body2\">\r\n              //                Forgot password?\r\n              //              </Link>\r\n              //            </Grid>\r\n              //            <Grid item>\r\n              //              <Link href=\"#\" variant=\"body2\">\r\n              //                {\"Don't have an account? Sign Up\"}\r\n              //              </Link>\r\n              //            </Grid>\r\n              //          </Grid>\r\n                      }\r\n            <Box mt={5}>\r\n              <Copyright />\r\n            </Box>\r\n          </form>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport {\r\n  Box,\r\n  Container,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport Page from 'src/components/Page';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    height: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  },\r\n  image: {\r\n    marginTop: 50,\r\n    display: 'inline-block',\r\n    maxWidth: '100%',\r\n    width: 560\r\n  }\r\n}));\r\n\r\nconst NotFoundView = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Page\r\n      className={classes.root}\r\n      title=\"404\"\r\n    >\r\n      <Box\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n        height=\"100%\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <Container maxWidth=\"md\">\r\n          <Typography\r\n            align=\"center\"\r\n            color=\"textPrimary\"\r\n            variant=\"h1\"\r\n          >\r\n            404: The page you are looking for isn’t here\r\n          </Typography>\r\n          <Typography\r\n            align=\"center\"\r\n            color=\"textPrimary\"\r\n            variant=\"subtitle2\"\r\n          >\r\n            You either tried some shady route or you came here by mistake.\r\n            Whichever it is, try using the navigation\r\n          </Typography>\r\n          <Box textAlign=\"center\">\r\n            <img\r\n              alt=\"Under development\"\r\n              className={classes.image}\r\n              src=\"/static/images/undraw_page_not_found_su7k.svg\"\r\n            />\r\n          </Box>\r\n        </Container>\r\n      </Box>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default NotFoundView;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  TextField,\r\n  InputAdornment,\r\n  SvgIcon,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport { Search as SearchIcon } from 'react-feather';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  importButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  exportButton: {\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst Toolbar = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"flex-end\"\r\n      >\r\n        <Button className={classes.importButton}>\r\n          Import\r\n        </Button>\r\n        <Button className={classes.exportButton}>\r\n          Export\r\n        </Button>\r\n        <Button\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n        >\r\n          Add product\r\n        </Button>\r\n      </Box>\r\n      <Box mt={3}>\r\n        <Card>\r\n          <CardContent>\r\n            <Box maxWidth={500}>\r\n              <TextField\r\n                fullWidth\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <SvgIcon\r\n                        fontSize=\"small\"\r\n                        color=\"action\"\r\n                      >\r\n                        <SearchIcon />\r\n                      </SvgIcon>\r\n                    </InputAdornment>\r\n                  )\r\n                }}\r\n                placeholder=\"Search product\"\r\n                variant=\"outlined\"\r\n              />\r\n            </Box>\r\n          </CardContent>\r\n        </Card>\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nToolbar.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Toolbar;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Divider,\r\n  Grid,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n  statsItem: {\r\n    alignItems: 'center',\r\n    display: 'flex'\r\n  },\r\n  statsIcon: {\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst ProductCard = ({ className, product, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardContent>\r\n        <Box\r\n          display=\"flex\"\r\n          justifyContent=\"center\"\r\n          mb={3}\r\n        >\r\n          <Avatar\r\n            alt=\"Product\"\r\n            src={product.media}\r\n            variant=\"square\"\r\n          />\r\n        </Box>\r\n        <Typography\r\n          align=\"center\"\r\n          color=\"textPrimary\"\r\n          gutterBottom\r\n          variant=\"h4\"\r\n        >\r\n          {product.title}\r\n        </Typography>\r\n        <Typography\r\n          align=\"center\"\r\n          color=\"textPrimary\"\r\n          variant=\"body1\"\r\n        >\r\n          {product.description}\r\n        </Typography>\r\n      </CardContent>\r\n      <Box flexGrow={1} />\r\n      <Divider />\r\n      <Box p={2}>\r\n        <Grid\r\n          container\r\n          justify=\"space-between\"\r\n          spacing={2}\r\n        >\r\n          <Grid\r\n            className={classes.statsItem}\r\n            item\r\n          >\r\n            <AccessTimeIcon\r\n              className={classes.statsIcon}\r\n              color=\"action\"\r\n            />\r\n            <Typography\r\n              color=\"textSecondary\"\r\n              display=\"inline\"\r\n              variant=\"body2\"\r\n            >\r\n              Updated 2hr ago\r\n            </Typography>\r\n          </Grid>\r\n          <Grid\r\n            className={classes.statsItem}\r\n            item\r\n          >\r\n            <GetAppIcon\r\n              className={classes.statsIcon}\r\n              color=\"action\"\r\n            />\r\n            <Typography\r\n              color=\"textSecondary\"\r\n              display=\"inline\"\r\n              variant=\"body2\"\r\n            >\r\n              {product.totalDownloads}\r\n              {' '}\r\n              Downloads\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Card>\r\n  );\r\n};\r\n\r\nProductCard.propTypes = {\r\n  className: PropTypes.string,\r\n  product: PropTypes.object.isRequired\r\n};\r\n\r\nexport default ProductCard;\r\n","import { v4 as uuid } from 'uuid';\r\n\r\nexport default [\r\n  {\r\n    id: uuid(),\r\n    createdAt: '27/03/2019',\r\n    description: 'Dropbox is a file hosting service that offers cloud storage, file synchronization, a personal cloud.',\r\n    media: '/static/images/products/product_1.png',\r\n    title: 'Dropbox',\r\n    totalDownloads: '594'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    createdAt: '31/03/2019',\r\n    description: 'Medium is an online publishing platform developed by Evan Williams, and launched in August 2012.',\r\n    media: '/static/images/products/product_2.png',\r\n    title: 'Medium Corporation',\r\n    totalDownloads: '625'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    createdAt: '03/04/2019',\r\n    description: 'Slack is a cloud-based set of team collaboration tools and services, founded by Stewart Butterfield.',\r\n    media: '/static/images/products/product_3.png',\r\n    title: 'Slack',\r\n    totalDownloads: '857'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    createdAt: '04/04/2019',\r\n    description: 'Lyft is an on-demand transportation company based in San Francisco, California.',\r\n    media: '/static/images/products/product_4.png',\r\n    title: 'Lyft',\r\n    totalDownloads: '406'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    createdAt: '04/04/2019',\r\n    description: 'GitHub is a web-based hosting service for version control of code using Git.',\r\n    media: '/static/images/products/product_5.png',\r\n    title: 'GitHub',\r\n    totalDownloads: '835'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    createdAt: '04/04/2019',\r\n    description: 'Squarespace provides software as a service for website building and hosting. Headquartered in NYC.',\r\n    media: '/static/images/products/product_6.png',\r\n    title: 'Squarespace',\r\n    totalDownloads: '835'\r\n  }\r\n];\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Box,\r\n  Container,\r\n  Grid,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport { Pagination } from '@material-ui/lab';\r\nimport Page from 'src/components/Page';\r\nimport Toolbar from './Toolbar';\r\nimport ProductCard from './ProductCard';\r\nimport data from './data';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  },\r\n  productCard: {\r\n    height: '100%'\r\n  }\r\n}));\r\n\r\nconst ProductList = () => {\r\n  const classes = useStyles();\r\n  const [products] = useState(data);\r\n\r\n  return (\r\n    <Page\r\n      className={classes.root}\r\n      title=\"Products\"\r\n    >\r\n      <Container maxWidth={false}>\r\n        <Toolbar />\r\n        <Box mt={3}>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n            {products.map((product) => (\r\n              <Grid\r\n                item\r\n                key={product.id}\r\n                lg={4}\r\n                md={6}\r\n                xs={12}\r\n              >\r\n                <ProductCard\r\n                  className={classes.productCard}\r\n                  product={product}\r\n                />\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Box>\r\n        <Box\r\n          mt={3}\r\n          display=\"flex\"\r\n          justifyContent=\"center\"\r\n        >\r\n          <Pagination\r\n            color=\"primary\"\r\n            count={3}\r\n            size=\"small\"\r\n          />\r\n        </Box>\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default ProductList;\r\n","import React from 'react';\r\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Checkbox,\r\n  Container,\r\n  FormHelperText,\r\n  Link,\r\n  TextField,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport Page from 'src/components/Page';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    height: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nconst RegisterView = () => {\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <Page\r\n      className={classes.root}\r\n      title=\"Register\"\r\n    >\r\n      <Box\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n        height=\"100%\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <Container maxWidth=\"sm\">\r\n          <Formik\r\n            initialValues={{\r\n              email: '',\r\n              firstName: '',\r\n              lastName: '',\r\n              password: '',\r\n              policy: false\r\n            }}\r\n            validationSchema={\r\n              Yup.object().shape({\r\n                email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\r\n                firstName: Yup.string().max(255).required('First name is required'),\r\n                lastName: Yup.string().max(255).required('Last name is required'),\r\n                password: Yup.string().max(255).required('password is required'),\r\n                policy: Yup.boolean().oneOf([true], 'This field must be checked')\r\n              })\r\n            }\r\n            onSubmit={() => {\r\n              navigate('/app/dashboard', { replace: true });\r\n            }}\r\n          >\r\n            {({\r\n              errors,\r\n              handleBlur,\r\n              handleChange,\r\n              handleSubmit,\r\n              isSubmitting,\r\n              touched,\r\n              values\r\n            }) => (\r\n              <form onSubmit={handleSubmit}>\r\n                <Box mb={3}>\r\n                  <Typography\r\n                    color=\"textPrimary\"\r\n                    variant=\"h2\"\r\n                  >\r\n                    Create new account\r\n                  </Typography>\r\n                  <Typography\r\n                    color=\"textSecondary\"\r\n                    gutterBottom\r\n                    variant=\"body2\"\r\n                  >\r\n                    Use your email to create new account\r\n                  </Typography>\r\n                </Box>\r\n                <TextField\r\n                  error={Boolean(touched.firstName && errors.firstName)}\r\n                  fullWidth\r\n                  helperText={touched.firstName && errors.firstName}\r\n                  label=\"First name\"\r\n                  margin=\"normal\"\r\n                  name=\"firstName\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  value={values.firstName}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  error={Boolean(touched.lastName && errors.lastName)}\r\n                  fullWidth\r\n                  helperText={touched.lastName && errors.lastName}\r\n                  label=\"Last name\"\r\n                  margin=\"normal\"\r\n                  name=\"lastName\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  value={values.lastName}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  error={Boolean(touched.email && errors.email)}\r\n                  fullWidth\r\n                  helperText={touched.email && errors.email}\r\n                  label=\"Email Address\"\r\n                  margin=\"normal\"\r\n                  name=\"email\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  type=\"email\"\r\n                  value={values.email}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  error={Boolean(touched.password && errors.password)}\r\n                  fullWidth\r\n                  helperText={touched.password && errors.password}\r\n                  label=\"Password\"\r\n                  margin=\"normal\"\r\n                  name=\"password\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  type=\"password\"\r\n                  value={values.password}\r\n                  variant=\"outlined\"\r\n                />\r\n                <Box\r\n                  alignItems=\"center\"\r\n                  display=\"flex\"\r\n                  ml={-1}\r\n                >\r\n                  <Checkbox\r\n                    checked={values.policy}\r\n                    name=\"policy\"\r\n                    onChange={handleChange}\r\n                  />\r\n                  <Typography\r\n                    color=\"textSecondary\"\r\n                    variant=\"body1\"\r\n                  >\r\n                    I have read the\r\n                    {' '}\r\n                    <Link\r\n                      color=\"primary\"\r\n                      component={RouterLink}\r\n                      to=\"#\"\r\n                      underline=\"always\"\r\n                      variant=\"h6\"\r\n                    >\r\n                      Terms and Conditions\r\n                    </Link>\r\n                  </Typography>\r\n                </Box>\r\n                {Boolean(touched.policy && errors.policy) && (\r\n                  <FormHelperText error>\r\n                    {errors.policy}\r\n                  </FormHelperText>\r\n                )}\r\n                <Box my={2}>\r\n                  <Button\r\n                    color=\"primary\"\r\n                    disabled={isSubmitting}\r\n                    fullWidth\r\n                    size=\"large\"\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                  >\r\n                    Sign up now\r\n                  </Button>\r\n                </Box>\r\n                <Typography\r\n                  color=\"textSecondary\"\r\n                  variant=\"body1\"\r\n                >\r\n                  Have an account?\r\n                  {' '}\r\n                  <Link\r\n                    component={RouterLink}\r\n                    to=\"/login\"\r\n                    variant=\"h6\"\r\n                  >\r\n                    Sign in\r\n                  </Link>\r\n                </Typography>\r\n              </form>\r\n            )}\r\n          </Formik>\r\n        </Container>\r\n      </Box>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default RegisterView;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Checkbox,\r\n  Divider,\r\n  FormControlLabel,\r\n  Grid,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(({\r\n  root: {},\r\n  item: {\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  }\r\n}));\r\n\r\nconst Notifications = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <form\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <Card>\r\n        <CardHeader\r\n          subheader=\"Manage the notifications\"\r\n          title=\"Notifications\"\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={6}\r\n            wrap=\"wrap\"\r\n          >\r\n            <Grid\r\n              className={classes.item}\r\n              item\r\n              md={4}\r\n              sm={6}\r\n              xs={12}\r\n            >\r\n              <Typography\r\n                color=\"textPrimary\"\r\n                gutterBottom\r\n                variant=\"h6\"\r\n              >\r\n                Notifications\r\n              </Typography>\r\n              <FormControlLabel\r\n                control={(\r\n                  <Checkbox defaultChecked />\r\n                )}\r\n                label=\"Email\"\r\n              />\r\n              <FormControlLabel\r\n                control={(\r\n                  <Checkbox defaultChecked />\r\n                )}\r\n                label=\"Push Notifications\"\r\n              />\r\n              <FormControlLabel\r\n                control={<Checkbox />}\r\n                label=\"Text Messages\"\r\n              />\r\n              <FormControlLabel\r\n                control={(\r\n                  <Checkbox defaultChecked />\r\n                )}\r\n                label=\"Phone calls\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              className={classes.item}\r\n              item\r\n              md={4}\r\n              sm={6}\r\n              xs={12}\r\n            >\r\n              <Typography\r\n                color=\"textPrimary\"\r\n                gutterBottom\r\n                variant=\"h6\"\r\n              >\r\n                Messages\r\n              </Typography>\r\n              <FormControlLabel\r\n                control={(\r\n                  <Checkbox defaultChecked />\r\n                )}\r\n                label=\"Email\"\r\n              />\r\n              <FormControlLabel\r\n                control={<Checkbox />}\r\n                label=\"Push Notifications\"\r\n              />\r\n              <FormControlLabel\r\n                control={(\r\n                  <Checkbox defaultChecked />\r\n                )}\r\n                label=\"Phone calls\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <Box\r\n          display=\"flex\"\r\n          justifyContent=\"flex-end\"\r\n          p={2}\r\n        >\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n          >\r\n            Save\r\n          </Button>\r\n        </Box>\r\n      </Card>\r\n    </form>\r\n  );\r\n};\r\n\r\nNotifications.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Notifications;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  TextField,\r\n  makeStyles\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(({\r\n  root: {}\r\n}));\r\n\r\nconst Password = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n  const [values, setValues] = useState({\r\n    password: '',\r\n    confirm: ''\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    setValues({\r\n      ...values,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  return (\r\n    <form\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <Card>\r\n        <CardHeader\r\n          subheader=\"Update password\"\r\n          title=\"Password\"\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <TextField\r\n            fullWidth\r\n            label=\"Password\"\r\n            margin=\"normal\"\r\n            name=\"password\"\r\n            onChange={handleChange}\r\n            type=\"password\"\r\n            value={values.password}\r\n            variant=\"outlined\"\r\n          />\r\n          <TextField\r\n            fullWidth\r\n            label=\"Confirm password\"\r\n            margin=\"normal\"\r\n            name=\"confirm\"\r\n            onChange={handleChange}\r\n            type=\"password\"\r\n            value={values.confirm}\r\n            variant=\"outlined\"\r\n          />\r\n        </CardContent>\r\n        <Divider />\r\n        <Box\r\n          display=\"flex\"\r\n          justifyContent=\"flex-end\"\r\n          p={2}\r\n        >\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n          >\r\n            Update\r\n          </Button>\r\n        </Box>\r\n      </Card>\r\n    </form>\r\n  );\r\n};\r\n\r\nPassword.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Password;\r\n","import React from 'react';\r\nimport {\r\n  Box,\r\n  Container,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport Page from 'src/components/Page';\r\nimport Notifications from './Notifications';\r\nimport Password from './Password';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nconst SettingsView = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Page\r\n      className={classes.root}\r\n      title=\"Settings\"\r\n    >\r\n      <Container maxWidth=\"lg\">\r\n        <Notifications />\r\n        <Box mt={3}>\r\n          <Password />\r\n        </Box>\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default SettingsView;\r\n","import React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport DashboardLayout from 'src/layouts/DashboardLayout';\r\nimport MainLayout from 'src/layouts/MainLayout';\r\nimport AccountView from 'src/views/account/AccountView';\r\nimport CustomerListView from 'src/views/customer/CustomerListView';\r\nimport DashboardView from 'src/views/reports/DashboardView';\r\nimport LoginView from 'src/views/auth/LoginView';\r\nimport NotFoundView from 'src/views/errors/NotFoundView';\r\nimport ProductListView from 'src/views/product/ProductListView';\r\nimport RegisterView from 'src/views/auth/RegisterView';\r\nimport SettingsView from 'src/views/settings/SettingsView';\r\n\r\nconst routes = [\r\n  {\r\n    path: 'app',\r\n    element: <DashboardLayout />,\r\n    children: [\r\n      { path: 'account', element: <AccountView /> },\r\n      { path: 'customers', element: <CustomerListView /> },\r\n      { path: 'dashboard', element: <DashboardView /> },\r\n      { path: 'products', element: <ProductListView /> },\r\n      { path: 'settings', element: <SettingsView /> },\r\n      { path: '*', element: <Navigate to=\"/404\" /> }\r\n    ]\r\n  },\r\n  {\r\n    path: '/',\r\n    element: <MainLayout />,\r\n    children: [\r\n      { path: 'login', element: <LoginView /> },\r\n      { path: 'register', element: <RegisterView /> },\r\n      { path: '404', element: <NotFoundView /> },\r\n      { path: '/', element: <Navigate to=\"/login\" /> },\r\n      { path: '*', element: <Navigate to=\"/404\" /> }\r\n    ]\r\n  }\r\n];\r\n\r\nexport default routes;\r\n","import 'react-perfect-scrollbar/dist/css/styles.css';\r\nimport React from 'react';\r\nimport { useRoutes } from 'react-router-dom';\r\nimport { ThemeProvider } from '@material-ui/core';\r\nimport GlobalStyles from 'src/components/GlobalStyles';\r\nimport 'src/mixins/chartjs';\r\nimport theme from 'src/theme';\r\nimport routes from 'src/routes';\r\n\r\nconst App = () => {\r\n  const routing = useRoutes(routes);\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <GlobalStyles />\r\n      {routing}\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport App from './App';\r\n\r\nReactDOM.render((\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>\r\n), document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}